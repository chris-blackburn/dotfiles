" Fixes some things when I used fish
set shell=/bin/bash

execute pathogen#infect()

" to make lightline.vim show and for colors
set laststatus=2
if !has('gui_running')
  set t_Co=256
endif

colorscheme elflord

" Mode displayed by lightline
set noshowmode

" Configure lightline
let g:lightline = {
  \ 'colorscheme': 'seoul256',
  \ 'component': {
  \   'readonly': '%{&readonly?"":""}',
  \ },
  \ 'separator': { 'left': '', 'right': '' },
  \ 'subseparator': { 'left': '', 'right': '' },
  \ }

let g:promptline_theme = "lightline"
let g:promptline_preset = {
  \'a' : [ promptline#slices#host() ],
  \'b' : [ promptline#slices#user() ],
  \'c' : [ promptline#slices#cwd({ 'dir_limit': 1 }) ],
  \'y' : [ promptline#slices#vcs_branch() ],
  \'warn' : [ promptline#slices#last_exit_code() ]}

" Vim can recognize files and can load plugins
filetype on
filetype plugin on

" pretty much always want Syntax highlighting
syntax on

nnoremap <F7> :setlocal spell!<CR>
set dictionary=/usr/share/dict/words

" For autocompletion
set omnifunc=syntaxcomplete#Complete
set completeopt=noinsert,menuone
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <expr> <Down> pumvisible() ? "\<C-n>" : "\<Down>"
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <Up> pumvisible() ? "\<C-p>" : "\<Up>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
  \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
inoremap <expr> <C-Space> pumvisible() ? "\<C-n>" : "\<C-x>\<C-o>"
imap <C-@> <C-Space>

" Look for tags in parent directories
set tags=./tags;/

if has('cscope')
  set cscopetag
  set cscopeverbose

  if has('quickfix')
    set cscopequickfix=s-,c-,d-,i-,t-,e-
  endif

  cnoreabbrev csa cs add
  cnoreabbrev csf cs find
  cnoreabbrev csk cs kill
  cnoreabbrev csr cs reset
  cnoreabbrev css cs show
  cnoreabbrev csh cs help

  nmap <C-_>s :cs find s <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>g :cs find g <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>c :cs find c <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>t :cs find t <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>e :cs find e <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
  nmap <C-_>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
  nmap <C-_>d :cs find d <C-R>=expand("<cword>")<CR><CR>
  nmap <C-_>a :cs find a <C-R>=expand("<cword>")<CR><CR>

  " Autoload cscope file
  function! LoadCscope()
    let db = findfile("cscope.out", ".;")
    if (!empty(db))
      let path = strpart(db, 0, match(db, "/cscope.out$"))
      set nocscopeverbose " suppress 'duplicate connection' error
      exe "cs add " . db . " " . path
      set cscopeverbose
    " else add the database pointed to by environment variable
    elseif $CSCOPE_DB != ""
      cs add $CSCOPE_DB
    endif
  endfunction
  au BufEnter /* call LoadCscope()
endif

set ignorecase
set hlsearch
set incsearch
set showcmd
set wildmenu
set nowrap
filetype indent on
set autoindent expandtab tabstop=4 shiftwidth=4
set nolazyredraw
set ttyfast

" Highlight the current line
set cursorline
hi CursorLine term=bold cterm=bold ctermbg=236

" Mark column limit and force new line when typing past
set tw=80
set cc=81
hi ColorColumn ctermbg=240
set nojoinspaces

" send deleted and changed text to black hole register
nnoremap d "_d
nnoremap D "_D
vnoremap d "_d
vnoremap D "_D

nnoremap c "_c
nnoremap C "_C
vnoremap c "_c
vnoremap C "_C

" Template files
autocmd BufNewFile *.c,*.cpp 0r ~/.vim/templates/template.c
autocmd BufNewFile *.h,*.hpp 0r ~/.vim/templates/template.h
autocmd BufNewFile *.py 0r ~/.vim/templates/template.py
autocmd BufNewFile *.sh 0r ~/.vim/templates/template.sh
" Base makefile for generating cscope and ctags for my goto dir structure
autocmd BufNewFile Makefile 0r ~/.vim/templates/Makefile

" Invisible characters
" use "set list" to turn on and "set nolist" to turn off
set listchars=eol:¬,tab:»\ ,space:·

" Set the swap and backup dir to something not annoying
set directory=~/.vim/.swp,/tmp
set backupdir=~/.vim/.backup,/tmp

" I don't want mouse
set mouse=
set ttymouse=
